# User Configuration File for SEAS
#
# if parameter set to -1, unless explicitly stated, is a dummy variable.
# The exact value will be calculated in the simulation or loaded from files.  
# Manually setting these parameters will mute certain functions in the code.
# Do not modify unless you know what you're doing

[Config]
	# the version of SEAS this configuration file is aiming for
	version = 0.8.0
	# enter the author here. May have future uses
	username = Zhuchang Zhan
	
	# Seed used for random functions so that we can keep simulation consistent. 
	# Set this to -1 for actual simulation
	Seed = 42

[Data_IO]
	[[File_Path]]
		Species_Name = ../../SEAS_Input/Atmosphere_Data/Atmosphere_Prototype/SpeciesName.dat
		
		# Hash is for generated from hashing the TP profile
		# This Allows cross section to be generated only once for each TP Profile
		Hash = -1

	[[Logging]]
		# Controller for print statements in the simulation.
		# If VERBOSE is True, will output debug statements, ot it seems
		VERBOSE = False
	
	[[Unit_Test]]
	
	
	
# output of the photochemistry code are pointed here
[Prototype]
	
	# Atmosphere prototype: major constituent (CO2, N2 or H2)
	Atmosphere_Type = CO2
	
	# Type of star
	Stellar_Type = MA
	
	# which scenario file we should be using. 
	# need to check to make sure this is consistent with the stellar information
	Scenario_File = CO2_MA_PH3@3E11.dat

	# What molecules are included for the simulation
	Molecule_List = 
	
	# Muted molecules. This can be used when trying to simulate an atmosphere with/without certain gas
	No_Molecule_List = 
	
	# Threshold which we accept the molecule set to exclude less than 100 ppb.
	# Future work should compare the difference between 1e-7 and 1e-9.
	Threshold = 1e-7 # unitless, ratio between max abundance and number density of atmosphere.

	# Mixing-ratio profiles. (MR profile, molecular % as a function of scale height)
	Input_MR_Profile = 
	MR_Profile = 
	
	# Scale Height of the atmosphere
	Input_Scale_Height =
	Normalized_Scale_Height =
	
	# Temperature-pressure profiles (TP profile, T and P as a function of scale height)
	Input_Pressure = 
	Input_Temperature = 
	
	Normalized_Pressure = 
	Normalized_Temperature = 	 



# Spectra toggles
[Spectra]

	# Category:
	Category = TS

	# Minumum wavenumber
	Numin = 100
	
	# Maximum wavenumber
	Numax = 30000
	Resolution = 1
	
	# min_wavelength
	Wlmin = 1
	
	Wlmax = 25 
	
	Wavenumber = -1,-1
	Wavelength = -1,-1
	
	convolve_amount = 10

# Cross sections
[Xsec]

	# Molecular absorption
	[[Molecule]]
		T_Grid = 100,150,200,250,275,300,325,350,400
		P_Grid = 100000.0, 36800.0, 13500.0, 4980.0, 1830.0, 674.0, 248.0, 91.2, 33.5, 12.3, 4.54, 1.67, 0.614, 0.226, 0.0832, 0.0306, 0.0113, 0.00414, 0.00152, 0.00056, 0.000206, 7.58e-05, 2.79e-05, 1.03e-05
		Value = -1
		Enable = True
	
	# Rayleigh scattering
	[[Rayleigh]]
		Value = -1
		Enable = True
	
	# Collision induced absorption
	[[CIA]]
		Value = -1
		Enable = True
	
	# Cloud absorption 
	[[Cloud]]
		Deck = 100000
		Opacity = 0.01
		Value = -1
		Enable = True
	

# Stellar Properties
[Star]
	# Stellar Type
	Type = "M5V"
	
	# Radius of the star in unit of R_Sun
	R_Star = 0.26  
	
	# Mass of the star in unit of M_Sun
	M_Star = 0.4
	
	# Temperature of the star in unit of K
	T_Star = 3000.0
	
	# Metallicity of the star compared to solar
	Metallicity = 1
	
	# Spectra used for the star
	IR_Spectra = 
	UV_Spectra = 


# Planetary Properties
[Planet]
	# Radius of Planet in unit of R_Earth (what about R_Jupiter?)
	R_Planet = 1.75
	
	# Mass of Planet in unit of M_Earth
	M_Planet = 10
	
	# Distance to Star in unit of AU
	D_Planet = 0.1
	
	# Surface Temperature in unit of K
	Surface_Temperature = 300.0
	
	# Surface Gravity will be calculated from mass and radius
	Surface_Gravity = -1

[System]
	
	#Planet Star Separation (contradict with planet surface temperature)
	D_Planet_Star = -1 
	
	#Star distance to observer
	D_Star_Observer = 10 #pc

# Atmospheric Properties
[Atmosphere]
	
	# Scale Height of the atmosphere. 
	# This is usually a calculated parameter so leave it -1 is fine
	# If specified, will skip scale height calculation
	Scale_Height = -1
	
	# Surface Pressure
	# This need some thoughts about how to shift from Earth value to other planets
	# without the need to interpolate on existing database
	# Highest Pressure is 1000000, any value above this pressure is useless since
	# no cross section is simulated for those pressure points.
	# Unit: Pa
	# Surface Pressure. Usually loaded from TP profile from photochemistry code
	Surface_Pressure = -1

	# Pressure cut off. This is defined as the "top" of the atmosphere
	# Lowest pressure is 0.00001, any value below this pressure is useless since
	# no cross section is simulated for those pressure points.
	# Unit: Pa
	TS_P_Cut_Off = 0.00001 
	ES_P_Cut_Off = 0.01 # ES is so high in P cut off... need to evaluate this further 

	# Minimal Transmission value set by astrophysics.py
	Base_TS_Value = -1

	# Layer_Pressure. A list of decreasing pressure from surface Pressure to Cut Off.
	# The length of this list is the Num_Layers
	Pressure_Layers = -1, -1

	# Number of Layers, will be determined base on Surface Pressure and Cut Off
	# Each Layer is defined as integer number of scale height values (need a better definition)
	Num_Layers = -1
	
	# Sub Layers. If Sub Layers is bigger than 2, cross sections will be interpolated
	# Warning: Interpolating cross sections can be time consuming for the simulation
	# May take up to ~10min to interpolate each molecule
	Sub_Layers = 1
	
	# Mean Molecular Weight Per Layer. Will be calculated from the mixing ratio file
	# after filler molecules are added in.
	Mean_MW = -1,-1

	# Cloud Deck
	# Simple cloud model where a grey cloud deck is added 
	# This contradict with the cloud absorption cross section
	# If cloud absorption cross section is set, will overrule the cloud deck 
	#Cloud_Deck = 10000
	#Cloud_Opacity = 1

[Telescope]

	Aperture = 6.5 # meter
	
	min_wavelength = 1  # micron
	
	max_wavelength = 25 # micron

	Duration = 100 #hr
	
	# How effective the telescope at collecting the photon stricking it.
	Quantum_Efficiency = 0.25
	
	# How the spectra is binned. 
	# This will be set by a user function? 
	[[Binning]]
		
		bin_width = 0.05
		bin_exponent = 1
	
	[[Noise]]
		# noise floor of 10 ppm is assumed
		noise_floor = 10 #ppm
		multiplier = 1.5

	# not sure how to use this yet
	[[Filter]]
		
# Last Remarks
[Random]
	seriously_over_four_hundred_lines_of_user_inputs_to_be_loaded_into_the_simulation_question_mark_now_reduced_to_200 = true
	












